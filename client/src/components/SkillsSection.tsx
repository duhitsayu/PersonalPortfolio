import { useEffect, useRef } from 'react';
import { useFadeIn } from "@/hooks/useFadeIn";
import { RotatingCube } from "@/components/3d/RotatingCube";

// Skill data
const technicalSkills = [
  { name: "UI/UX Design", percentage: 95 },
  { name: "React.js & Frontend Development", percentage: 90 },
  { name: "Python & AI/ML", percentage: 85 },
  { name: "Computer Vision", percentage: 80 },
  { name: "Natural Language Processing", percentage: 75 },
];

const tools = [
  { name: "Figma", icon: "M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm-2.426 9.574h-1.5v1.5h1.5v-1.5zm-1.5-3.574h1.5v-3.574h3.574v3.574h1.5v-3.574h1.5v-1.5h-1.5c0-1.243-1.007-2.25-2.25-2.25h-1.5v-1.5h-1.5v1.5h-1.5v1.5h1.5v3.574zm1.5 0v-3.574h3.574v3.574h-3.574zm0 1.5h3.574c1.243 0 2.25 1.007 2.25 2.25v1.5c0 1.243-1.007 2.25-2.25 2.25h-3.574v-1.5h3.574v-1.5h-3.574v-3z" },
  { name: "Framer", icon: "M6 12h12V6H6v6zM0 0v18h6v6h18V6h-6V0H0z" },
  { name: "React", icon: "M14.23 12.004a2.236 2.236 0 0 1-2.235 2.236 2.236 2.236 0 0 1-2.236-2.236 2.236 2.236 0 0 1 2.235-2.236 2.236 2.236 0 0 1 2.236 2.236zm2.648-10.69c-1.346 0-3.107.96-4.888 2.622-1.78-1.653-3.542-2.602-4.887-2.602-.41 0-.783.093-1.106.278-1.375.793-1.683 3.264-.973 6.365C1.98 8.917 0 10.42 0 12.004c0 1.59 1.99 3.097 5.043 4.03-.704 3.113-.39 5.588.988 6.38.32.187.69.275 1.102.275 1.345 0 3.107-.96 4.888-2.624 1.78 1.654 3.542 2.603 4.887 2.603.41 0 .783-.09 1.106-.275 1.374-.792 1.683-3.263.973-6.365C22.02 15.096 24 13.59 24 12.004c0-1.59-1.99-3.097-5.043-4.032.704-3.11.39-5.587-.988-6.38-.318-.184-.688-.277-1.092-.278zm-.005 1.09v.006c.225 0 .406.044.558.127.666.382.955 1.835.73 3.704-.054.46-.142.945-.25 1.44-.96-.236-2.006-.417-3.107-.534-.66-.905-1.345-1.727-2.035-2.447 1.592-1.48 3.087-2.292 4.105-2.295zm-9.77.02c1.012 0 2.514.808 4.11 2.28-.686.72-1.37 1.537-2.02 2.442-1.107.117-2.154.298-3.113.538-.112-.49-.195-.964-.254-1.42-.23-1.868.054-3.32.714-3.707.19-.09.4-.127.563-.132zm4.882 3.05c.455.468.91.992 1.36 1.564-.44-.02-.89-.034-1.345-.034-.46 0-.915.01-1.36.034.44-.572.895-1.096 1.345-1.565zM12 8.1c.74 0 1.477.034 2.202.093.406.582.802 1.203 1.183 1.86.372.64.71 1.29 1.018 1.946-.308.655-.646 1.31-1.013 1.95-.38.66-.773 1.288-1.18 1.87-.728.063-1.466.098-2.21.098-.74 0-1.477-.035-2.202-.093-.406-.582-.802-1.204-1.183-1.86-.372-.64-.71-1.29-1.018-1.946.303-.657.646-1.313 1.013-1.954.38-.66.773-1.286 1.18-1.868.728-.064 1.466-.098 2.21-.098zm-3.635.254c-.24.377-.48.763-.704 1.16-.225.39-.435.782-.635 1.174-.265-.656-.49-1.31-.676-1.947.64-.15 1.315-.283 2.015-.386zm7.26 0c.695.103 1.365.23 2.006.387-.18.632-.405 1.282-.66 1.933-.2-.39-.41-.783-.64-1.174-.225-.392-.465-.774-.705-1.146zm3.063.675c.484.15.944.317 1.375.498 1.732.74 2.852 1.708 2.852 2.476-.005.768-1.125 1.74-2.857 2.475-.42.18-.88.342-1.355.493-.28-.958-.646-1.956-1.1-2.98.45-1.017.81-2.01 1.085-2.964zm-13.395.004c.278.96.645 1.957 1.1 2.98-.45 1.017-.812 2.01-1.086 2.964-.484-.15-.944-.318-1.37-.5-1.732-.737-2.852-1.706-2.852-2.474 0-.768 1.12-1.742 2.852-2.476.42-.18.88-.342 1.356-.494zm11.678 4.28c.265.657.49 1.312.676 1.948-.64.157-1.316.29-2.016.39.24-.375.48-.762.705-1.158.225-.39.435-.788.636-1.18zm-9.945.02c.2.392.41.783.64 1.175.23.39.465.772.705 1.143-.695-.102-1.365-.23-2.006-.386.18-.63.406-1.282.66-1.933zM17.92 16.32c.112.493.2.968.254 1.423.23 1.868-.054 3.32-.714 3.708-.147.09-.338.128-.563.128-1.012 0-2.514-.807-4.11-2.28.686-.72 1.37-1.536 2.02-2.44 1.107-.118 2.154-.3 3.113-.54zm-11.83.01c.96.234 2.006.415 3.107.532.66.905 1.345 1.727 2.035 2.446-1.595 1.483-3.092 2.295-4.11 2.295-.22-.005-.406-.05-.553-.132-.666-.38-.955-1.834-.73-3.703.054-.46.142-.944.25-1.438zm4.56.64c.44.02.89.034 1.345.034.46 0 .915-.01 1.36-.034-.44.572-.895 1.095-1.345 1.565-.455-.47-.91-.993-1.36-1.565z" },
  { name: "Python", icon: "M14.25.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13v8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.77l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.17l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05-.05-1.23.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.24-.01h.16l.06.01h8.16v-.83H6.18l-.01-2.75-.02-.37.05-.34.11-.31.17-.28.25-.26.31-.23.38-.2.44-.18.51-.15.58-.12.64-.1.71-.06.77-.04.84-.02 1.27.05zm-6.3 1.98l-.23.33-.08.41.08.41.23.34.33.22.41.09.41-.09.33-.22.23-.34.08-.41-.08-.41-.23-.33-.33-.22-.41-.09-.41.09zm13.09 3.95l.28.06.32.12.35.18.36.27.36.35.35.47.32.59.28.73.21.88.14 1.04.05 1.23-.06 1.23-.16 1.04-.24.86-.32.71-.36.57-.4.45-.42.33-.42.24-.4.16-.36.09-.32.05-.24.02-.16-.01h-8.22v.82h5.84l.01 2.76.02.36-.05.34-.11.31-.17.29-.25.25-.31.24-.38.2-.44.18-.51.15-.58.13-.64.09-.71.07-.77.04-.84.01-1.27-.04-1.07-.14-.9-.2-.73-.25-.59-.3-.45-.33-.34-.34-.25-.34-.16-.33-.1-.3-.04-.25-.02-.2.01-.13v-5.34l.05-.64.13-.54.21-.46.26-.38.3-.32.33-.24.35-.2.35-.14.33-.1.3-.06.26-.04.21-.02.13-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01zm-6.47 14.25l-.23.33-.08.41.08.41.23.33.33.23.41.08.41-.08.33-.23.23-.33.08-.41-.08-.41-.23-.33-.33-.23-.41-.08-.41.08z" },
  { name: "OpenCV", icon: "M15 .59a17 17 0 00-15 16.95h4a13 13 0 0110.95-12.84A1.26 1.26 0 0115 2.36L17.41 0zM22.7 5.09a16.93 16.93 0 00-6.14-3.86l-2.14 3.7a13 13 0 016.5 10.71h-9l4.19-7.27a1.3 1.3 0 01-.52-.61L9.55 14.83a1.25 1.25 0 01.22 2.17l-4.55 7.9a17 17 0 0017.73-26.38M12.23 9.38a1.27 1.27 0 01-.46.46l2.36 4.09L12.59 9l-.36.36M1.3 19.53A17 17 0 007.39 24l4.62-8L1.3 19.53" },
];

export function SkillsSection() {
  const titleRef = useFadeIn();
  const skillsRef = useFadeIn();
  const toolsRef = useFadeIn();
  
  // Animate skill bars when they become visible
  const skillBarsRef = useRef<HTMLDivElement>(null);
  
  useEffect(() => {
    if (!skillBarsRef.current) return;
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          const bars = entry.target.querySelectorAll('.skill-bar');
          bars.forEach((bar: Element, index) => {
            setTimeout(() => {
              if (bar instanceof HTMLElement) {
                const width = bar.getAttribute('data-width') || '0%';
                bar.style.width = width;
              }
            }, index * 100);
          });
        }
      });
    }, { threshold: 0.1 });
    
    observer.observe(skillBarsRef.current);
    
    return () => {
      if (skillBarsRef.current) {
        observer.unobserve(skillBarsRef.current);
      }
    };
  }, []);

  return (
    <section id="skills" className="py-24 bg-gray-50 dark:bg-gray-800 theme-transition">
      <div className="container mx-auto px-6">
        <div ref={titleRef} className="fade-in mb-16 text-center">
          <h2 className="font-poppins font-bold text-3xl md:text-4xl relative inline-block">
            My Skills
            <span className="absolute bottom-0 left-0 w-full h-1 bg-primary dark:bg-primary transform -translate-y-2"></span>
          </h2>
          <p className="mt-4 max-w-2xl mx-auto text-lg opacity-80">
            My technical toolkit combines UI/UX design, frontend development, and AI/ML expertise
          </p>
        </div>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-16">
          <div ref={skillsRef} className="fade-in">
            <h3 className="font-poppins font-semibold text-xl mb-8 text-primary dark:text-primary">Technical Skills</h3>
            
            <div ref={skillBarsRef} className="space-y-6">
              {technicalSkills.map((skill, index) => (
                <div key={index} className="skill-item">
                  <div className="flex justify-between mb-2">
                    <span className="font-medium">{skill.name}</span>
                    <span>{skill.percentage}%</span>
                  </div>
                  <div className="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5 theme-transition">
                    <div 
                      className="skill-bar bg-primary dark:bg-primary h-2.5 rounded-full transition-all duration-1000 ease-out" 
                      style={{ width: '0%' }} 
                      data-width={`${skill.percentage}%`}
                    ></div>
                  </div>
                </div>
              ))}
            </div>
          </div>
          
          <div ref={toolsRef} className="fade-in">
            <h3 className="font-poppins font-semibold text-xl mb-8 text-primary dark:text-primary">Tools & Frameworks</h3>
            
            <div className="grid grid-cols-2 sm:grid-cols-3 gap-5">
              {tools.map((tool, index) => (
                <RotatingCube key={index} name={tool.name} svgPath={tool.icon} index={index} />
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}
